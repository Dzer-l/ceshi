{"remainingRequest":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jenkins_data/workspace/页面-公证处后台/src/views/entry/uploadImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jenkins_data/workspace/页面-公证处后台/src/views/entry/uploadImage.vue","mtime":1634724784708},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CglnZXRFdmlkU2lnblNlbmROZWVkTWF0ZXJpYWwsCglzaWduU2VuZEZpbGVVcGxvYWQsCglnZXRNYWlsRXZpZFJlY2VpdmVQZXJzb25JbmZvLAoJc2F2ZU1haWxQaWN0dXJlLAoJdXBkYXRlRXZpZE1haWwsCglnZXRDbG91ZERhdGVpbCwKCWV2aWRTaWduVXBsb2FkUXJjb2RlLAoJZ2V0SDVGaWxlU3RyZWFtLAoJZGVsSDVGaWxlCn0gZnJvbSAnLi4vLi4vYXBpL2Nsb3VkTWFpbCcKZXhwb3J0IGRlZmF1bHQgewoJZGF0YSgpIHsKCQlyZXR1cm4gewoJCQlkaWFsb2dJbWFnZVVybDogJycsCgkJCWRpYWxvZ1Zpc2libGU6IGZhbHNlLAoJCQlmaWxlTGlzdDogW10sCgkJCW1hdGVyaWFsQ29kZTogIiIsCS8vIDIwNjHnrb7mlLblm77niYfvvJsgMjA3MeWvhOWHveWbvueJhwoJCQlldmlkSWQ6ICIiLAkJCS8vIOivgeaNrmlkCgkJCWlkOiAiIiwKCQkJZXZpZE1haWxJZDogIiIsCgkJCW5lZWRNYXRlcmlhbFRpcHM6IFt7CgkJCQltYXRlcmlhbE5hbWU6ICIiLAoJCQkJbWF0ZXJpYWxEZXNjOiAiIiwKCQkJfV0sCS8vIOS4iuS8oOaPkOekugoJCQlwZXJzb25EYXRhOiBbXSwJLy8g5pS25Lu25Lq6L+WvhOS7tuS6uuS/oeaBrwoJCQlldmlkRGF0YTogIiIsCgkJCWltZ1VybDogIiIsCgkJCS8vIGNvZGVEaWFsb2dWaXNpYmxlOiBmYWxzZSwKCQkJZnJlcXVlbmN5X2FzdHJpY3Q6IDUsCgoJCX07Cgl9LAoJY3JlYXRlZCgpIHsKCQl0aGlzLm1hdGVyaWFsQ29kZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm1hdGVyaWFsQ29kZQoJCXRoaXMuZXZpZElkID0gdGhpcy4kcm91dGUucXVlcnkuZXZpZElkCgkJdGhpcy5pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkCgkJdGhpcy5ldmlkTWFpbElkID0gdGhpcy4kcm91dGUucXVlcnkuZXZpZE1haWxJZAoJCXRoaXMuZ2V0TmVlZE1hdGVyaWFsKCkKCQl0aGlzLmdldFBlcnNvbkRhdGEoKQoJCXRoaXMuZ2V0TWFpbERhdGEoKQoJCXRoaXMuZ2V0RXZpZFNpZ25VcGxvYWRRcmNvZGUoKQoJfSwKCW1ldGhvZHM6IHsKCQkvLyDojrflj5bkuIrkvKDkuoznu7TnoIEKCQlhc3luYyBnZXRFdmlkU2lnblVwbG9hZFFyY29kZSgpIHsKCQkJbGV0IHdlYnNvY2tldAoJCQlsZXQgZGF0YSA9IHsKCQkJCXVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX1dFQlNPQ0tFVF9QQVRILAoJCQkJZXZpZElkOiB0aGlzLmV2aWRJZCwKCQkJCW1hdGVyaWFsQ29kZTogdGhpcy5tYXRlcmlhbENvZGUKCQkJfQoJCQlsZXQgcmVzID0gYXdhaXQgZXZpZFNpZ25VcGxvYWRRcmNvZGUoZGF0YSkKCgkJCS8vIGNvbnNvbGUubG9nKCLojrflj5bkuIrkvKDkuoznu7TnoIEiLCByZXMpOwoJCQl0aGlzLmdldEltYWdlVXJsKHJlcykKCgkJCXZhciB0aGF0ID0gdGhpcwoJCQlpZiAoJ1dlYlNvY2tldCcgaW4gd2luZG93KSB7CgkJCQl3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9XRUJTT0NLRVRfV1NTICsgJy93ZWJzb2NrZXQvJyArIHRoaXMuZXZpZE1haWxJZCkKCQkJfQoKCQkJd2Vic29ja2V0Lm9ub3BlbiA9IGZ1bmN0aW9uICgpIHsKCQkJCWNvbnNvbGUubG9nKCfov57mjqXmiJDlip8nKQoJCQl9CgoJCQl3ZWJzb2NrZXQub25jbG9zZSA9IGZ1bmN0aW9uICgpIHsKCQkJCXRoYXQuZnJlcXVlbmN5X2FzdHJpY3QgPSB0aGF0LmZyZXF1ZW5jeV9hc3RyaWN0IC0gMQoJCQkJY29uc29sZS5sb2coJ+mAgOWHuui/nuaOpScpCgkJCQlpZiAodGhhdC4kcm91dGUubmFtZSA9PSAndXBsb2FkSW1hZ2UnICYmIHRoYXQuZnJlcXVlbmN5X2FzdHJpY3QpIHsKCQkJCQl0aGF0LmdldEV2aWRTaWduVXBsb2FkUXJjb2RlKGRhdGEpCgkJCQl9CgkJCX0KCgkJCXdlYnNvY2tldC5vbm1lc3NhZ2UgPSBhc3luYyBmdW5jdGlvbiAoZXZlbnQpIHsKCQkJCWNvbnNvbGUubG9nKCLmlLbliLDmtojmga8iICsgZXZlbnQuZGF0YSk7CgkJCQlpZiAoZXZlbnQuZGF0YSAhPT0gJ+i/nuaOpeaIkOWKnycpIHsKCQkJCQl2YXIgZmlsZURUTyA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSkKCQkJCQlpZiAoZmlsZURUTy5pc0RlbCAmJiBmaWxlRFRPLm9iamVjdE5hbWUpIHsJLy8g5Yig6Zmk5paH5Lu2CgkJCQkJCWNvbnNvbGUubG9nKCLliKDpmaTmlofku7Y9PT09PiIsIGZpbGVEVE8pOwoKCQkJCQkJdGhhdC5maWxlTGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewoJCQkJCQkJaWYgKGl0ZW0ub2JqZWN0TmFtZSA9PSBmaWxlRFRPLm9iamVjdE5hbWUpIHsKCQkJCQkJCQl0aGF0LmZpbGVMaXN0LnNwbGljZShpbmRleCwgMSkKCQkJCQkJCX0KCQkJCQkJfSkKCgkJCQkJCS8vIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGF0Lm1hdGVyaWFsVGlwcy5sZW5ndGg7IGluZGV4KyspIHsKCQkJCQkJLy8gCWlmICh0aGF0Lm1hdGVyaWFsVGlwc1tpbmRleF0ubGlzdC5sZW5ndGggPiAwKSB7CgkJCQkJCS8vIAkJZm9yIChsZXQgaW5kZXgyID0gMDsgaW5kZXgyIDwgdGhhdC5tYXRlcmlhbFRpcHNbaW5kZXhdLmxpc3QubGVuZ3RoOyBpbmRleDIrKykgewoJCQkJCQkvLyAJCQlpZiAodGhhdC5tYXRlcmlhbFRpcHNbaW5kZXhdLmxpc3RbaW5kZXgyXS5vYmplY3ROYW1lID09IGZpbGVEVE8ub2JqZWN0TmFtZSkgewoJCQkJCQkvLyAJCQkJdGhhdC5tYXRlcmlhbFRpcHNbaW5kZXhdLmxpc3Quc3BsaWNlKGluZGV4MiwgMSkKCQkJCQkJLy8gCQkJfQoJCQkJCQkvLyAJCX0KCQkJCQkJLy8gCX0KCQkJCQkJLy8gfQoKCQkJCQl9IGVsc2UgewkvLyDmt7vliqDmlofku7YKCQkJCQkJbGV0IGZpbGUgPSB7CgkJCQkJCQlidWNrZXROYW1lOiBmaWxlRFRPLmJ1Y2tldE5hbWUsCgkJCQkJCQllbmNyeXB0S2V5OiBudWxsLAoJCQkJCQkJdGVtcElkOiBmaWxlRFRPLnRlbXBJZCwKCQkJCQkJCW1hdGVyaWFsQ29kZTogZmlsZURUTy5tYXRlcmlhbENvZGUsCgkJCQkJCQltYXRlcmlhbE5hbWU6IGZpbGVEVE8ub3JpZ2luYWxGaWxlbmFtZSwKCQkJCQkJCW1hdGVyaWFsQnVja2V0OiBKU09OLnN0cmluZ2lmeSh7CgkJCQkJCQkJYnVja2V0TmFtZTogZmlsZURUTy5idWNrZXROYW1lLAoJCQkJCQkJCW9iamVjdE5hbWU6IGZpbGVEVE8ub2JqZWN0TmFtZQoJCQkJCQkJfSksCgkJCQkJCQlvYmplY3ROYW1lOiBmaWxlRFRPLm9iamVjdE5hbWUsCgkJCQkJCQlvcmlnaW5hbEZpbGVuYW1lOiBmaWxlRFRPLm9yaWdpbmFsRmlsZW5hbWUsCgkJCQkJCQlyZW5hbWU6IGZpbGVEVE8ucmVuYW1lLAoJCQkJCQkJdHlwZTogZmlsZURUTy5vcmlnaW5hbEZpbGVuYW1lLnN1YnN0cihmaWxlRFRPLm9yaWdpbmFsRmlsZW5hbWUubGFzdEluZGV4T2YoJy4nKSArIDEpLnRvTG9jYWxlTG93ZXJDYXNlKCksCgkJCQkJCQl1cmw6ICcnLAoJCQkJCQkJZXZpZElkOiB0aGF0LmV2aWRJZCwKCQkJCQkJCW1haWxFdmlkUGVyc29uSWQ6IGZpbGVEVE8ucHJvcG9zZXJJZCwKCQkJCQkJCXBlcnNvbklkOiBmaWxlRFRPLnByb3Bvc2VySWQsCgkJCQkJCQluYW1lOiBmaWxlRFRPLm9yaWdpbmFsRmlsZW5hbWUsCgkJCQkJCX0KCgkJCQkJCWlmICh0aGF0LmdldEZpbGVUeXBlKGZpbGUub3JpZ2luYWxGaWxlbmFtZSkgPT09ICdwZGYnKSB7CgkJCQkJCQlmaWxlLnVybCA9IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZ3MvcGRmLnBuZycpCgkJCQkJCQlmaWxlLnR5cGUgPSAncGRmJwoJCQkJCQl9IGVsc2UgaWYgKAoJCQkJCQkJdGhhdC5nZXRGaWxlVHlwZShmaWxlLm9yaWdpbmFsRmlsZW5hbWUpID09PSAnZXhjZWwnCgkJCQkJCSkgewoJCQkJCQkJZmlsZS51cmwgPSByZXF1aXJlKCdAL2Fzc2V0cy9pbWdzL3hscy5wbmcnKQoJCQkJCQkJZmlsZS50eXBlID0gJ3hsc3gnCgkJCQkJCX0gZWxzZSBpZiAodGhhdC5nZXRGaWxlVHlwZShmaWxlLm9yaWdpbmFsRmlsZW5hbWUpID09PSAnd29yZCcpIHsKCQkJCQkJCWZpbGUudXJsID0gcmVxdWlyZSgnQC9hc3NldHMvaW1ncy93b3JkLnBuZycpCgkJCQkJCQlmaWxlLnR5cGUgPSAnZG9jJwoJCQkJCQl9IGVsc2UgaWYgKHRoYXQuZ2V0RmlsZVR5cGUoZmlsZS5vcmlnaW5hbEZpbGVuYW1lKSA9PT0gJ2ltYWdlJykgewoJCQkJCQkJbGV0IHJlcyA9IGF3YWl0IGdldEg1RmlsZVN0cmVhbShmaWxlKQoKCQkJCQkJCWlmIChyZXMuc3VjY2VzcyAmJiByZXMuZGF0YSkgewoJCQkJCQkJCWZpbGUudXJsID0gdGhhdC5kYXRhVVJJdG9CbG9iKCJkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCIgKyByZXMuZGF0YSkKCQkJCQkJCQkvLyBmaWxlLnVybCA9ICdkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCcgKyByZXMuZGF0YQoJCQkJCQkJfQoJCQkJCQl9CgoJCQkJCQljb25zb2xlLmxvZygi5re75Yqg5paH5Lu2PT09PiIsIGZpbGUpOwoJCQkJCQl0aGF0LmZpbGVMaXN0LnB1c2goZmlsZSkKCgkJCQkJCS8vIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGF0Lm1hdGVyaWFsVGlwcy5sZW5ndGg7IGluZGV4KyspIHsKCQkJCQkJLy8gCWlmICh0aGF0Lm1hdGVyaWFsVGlwc1tpbmRleF0ubWF0ZXJpYWxDb2RlID09PSBmaWxlLm1hdGVyaWFsQ29kZSkgewoJCQkJCQkvLyAJCXRoYXQubWF0ZXJpYWxUaXBzW2luZGV4XS5saXN0LnB1c2goZmlsZSkKCQkJCQkJLy8gCX0KCQkJCQkJLy8gfQoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJd2Vic29ja2V0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7CgkJCQljb25zb2xlLmxvZygn6L+e5o6l5Ye66ZSZJykKCQkJfQoKCQl9LAoKCQkvLyDliKTmlq3mlofku7bnmoTnsbvlnosKCQlnZXRGaWxlVHlwZShmaWxlTmFtZSkgewoJCQkvLyDlkI7nvIDojrflj5YKCQkJbGV0IHN1ZmZpeCA9ICcnCgkJCS8vIOiOt+WPluexu+Wei+e7k+aenAoJCQlsZXQgcmVzdWx0ID0gJycKCQkJdHJ5IHsKCQkJCWNvbnN0IGZsaWVBcnIgPSBmaWxlTmFtZS5zcGxpdCgnLicpCgkJCQlzdWZmaXggPSBmbGllQXJyW2ZsaWVBcnIubGVuZ3RoIC0gMV0KCQkJfSBjYXRjaCAoZXJyKSB7CgkJCQlzdWZmaXggPSAnJwoJCQl9CgkJCS8vIGZpbGVOYW1l5peg5ZCO57yA6L+U5ZueIGZhbHNlCgkJCWlmICghc3VmZml4KSB7CgkJCQlyZXR1cm4gZmFsc2UKCQkJfQoJCQlzdWZmaXggPSBzdWZmaXgudG9Mb2NhbGVMb3dlckNhc2UoKQoJCQkvLyDlm77niYfmoLzlvI8KCQkJY29uc3QgaW1nbGlzdCA9IFsncG5nJywgJ2pwZycsICdqcGVnJywgJ2JtcCcsICdnaWYnXQoJCQkvLyDov5vooYzlm77niYfljLnphY0KCQkJcmVzdWx0ID0gaW1nbGlzdC5maW5kKChpdGVtKSA9PiBpdGVtID09PSBzdWZmaXgpCgkJCWlmIChyZXN1bHQpIHsKCQkJCXJldHVybiAnaW1hZ2UnCgkJCX0KCQkJLy8g5Yy56YWNdHh0CgkJCWNvbnN0IHR4dGxpc3QgPSBbJ3R4dCddCgkJCXJlc3VsdCA9IHR4dGxpc3QuZmluZCgoaXRlbSkgPT4gaXRlbSA9PT0gc3VmZml4KQoJCQlpZiAocmVzdWx0KSB7CgkJCQlyZXR1cm4gJ3R4dCcKCQkJfQoJCQkvLyDljLnphY0gZXhjZWwKCQkJY29uc3QgZXhjZWxpc3QgPSBbJ3hscycsICd4bHN4J10KCQkJcmVzdWx0ID0gZXhjZWxpc3QuZmluZCgoaXRlbSkgPT4gaXRlbSA9PT0gc3VmZml4KQoJCQlpZiAocmVzdWx0KSB7CgkJCQlyZXR1cm4gJ2V4Y2VsJwoJCQl9CgkJCS8vIOWMuemFjSB3b3JkCgkJCWNvbnN0IHdvcmRsaXN0ID0gWydkb2MnLCAnZG9jeCddCgkJCXJlc3VsdCA9IHdvcmRsaXN0LmZpbmQoKGl0ZW0pID0+IGl0ZW0gPT09IHN1ZmZpeCkKCQkJaWYgKHJlc3VsdCkgewoJCQkJcmV0dXJuICd3b3JkJwoJCQl9CgkJCS8vIOWMuemFjSBwZGYKCQkJY29uc3QgcGRmbGlzdCA9IFsncGRmJ10KCQkJcmVzdWx0ID0gcGRmbGlzdC5maW5kKChpdGVtKSA9PiBpdGVtID09PSBzdWZmaXgpCgkJCWlmIChyZXN1bHQpIHsKCQkJCXJldHVybiAncGRmJwoJCQl9CgkJCS8vIOWMuemFjSBwcHQKCQkJY29uc3QgcHB0bGlzdCA9IFsncHB0JywgJ3BwdHgnXQoJCQlyZXN1bHQgPSBwcHRsaXN0LmZpbmQoKGl0ZW0pID0+IGl0ZW0gPT09IHN1ZmZpeCkKCQkJaWYgKHJlc3VsdCkgewoJCQkJcmV0dXJuICdwcHQnCgkJCX0KCQkJLy8g5Yy56YWNIOinhumikQoJCQljb25zdCB2aWRlb2xpc3QgPSBbCgkJCQknbXA0JywKCQkJCSdtMnYnLAoJCQkJJ21rdicsCgkJCQkncm12YicsCgkJCQknd212JywKCQkJCSdhdmknLAoJCQkJJ2ZsdicsCgkJCQknbW92JywKCQkJCSdtNHYnCgkJCV0KCQkJcmVzdWx0ID0gdmlkZW9saXN0LmZpbmQoKGl0ZW0pID0+IGl0ZW0gPT09IHN1ZmZpeCkKCQkJaWYgKHJlc3VsdCkgewoJCQkJcmV0dXJuICd2aWRlbycKCQkJfQoJCQkvLyDljLnphY0g6Z+z6aKRCgkJCWNvbnN0IHJhZGlvbGlzdCA9IFsnbXAzJywgJ3dhdicsICd3bXYnXQoJCQlyZXN1bHQgPSByYWRpb2xpc3QuZmluZCgoaXRlbSkgPT4gaXRlbSA9PT0gc3VmZml4KQoJCQlpZiAocmVzdWx0KSB7CgkJCQlyZXR1cm4gJ3JhZGlvJwoJCQl9CgkJCS8vIOWFtuS7liDmlofku7bnsbvlnosKCQkJcmV0dXJuICdvdGhlcicKCQl9LAoKCQkvLyDojrflj5bor6bmg4UKCQlhc3luYyBnZXRNYWlsRGF0YSgpIHsKCQkJdmFyIGRhdGEgPSB7IGV2aWRJZDogdGhpcy5pZCB9CgkJCWxldCByZXMgPSBhd2FpdCBnZXRDbG91ZERhdGVpbChkYXRhKQoJCQlpZiAocmVzLnN1Y2Nlc3MpIHsKCQkJCXRoaXMuZXZpZERhdGEgPSByZXMuZGF0YQoJCQl9CgkJCS8vIGNvbnNvbGUubG9nKHJlcyk7CgkJfSwKCgkJLy8g6I635Y+W5pS25Lu25Lq6L+WvhOS7tuS6ugoJCWFzeW5jIGdldFBlcnNvbkRhdGEoKSB7CgkJCWxldCBkYXRhID0gewoJCQkJZXZpZE1haWxJZDogdGhpcy5ldmlkTWFpbElkLAoJCQkJcGVyc29uVHlwZTogdGhpcy5tYXRlcmlhbENvZGUgPT0gIjIwNjEiID8gMSA6IDIsCS8vIDIwNjHojrflj5blr4Tku7bkurogIDIwNzHojrflj5bmlLbku7bkuroKCQkJfQoJCQlsZXQgcmVzID0gYXdhaXQgZ2V0TWFpbEV2aWRSZWNlaXZlUGVyc29uSW5mbyhkYXRhKQoJCQkvLyBjb25zb2xlLmxvZygi5pS25Lu25Lq6L+WvhOS7tuS6uiIsIHJlcyk7CgkJCXRoaXMucGVyc29uRGF0YSA9IHJlcy5kYXRhCgkJfSwKCgkJLy8g6I635Y+W562+5pS25a+E5Ye954Wn54mH6ZyA6KaB5LiK5Lyg5p2Q5paZ57G75Z6LCgkJYXN5bmMgZ2V0TmVlZE1hdGVyaWFsKCkgewoJCQlsZXQgZGF0YSA9IHsKCQkJCW1hdGVyaWFsQ29kZTogdGhpcy5tYXRlcmlhbENvZGUsCgkJCQlldmlkSWQ6IHRoaXMuaWQKCQkJfQoJCQlsZXQgcmVzID0gYXdhaXQgZ2V0RXZpZFNpZ25TZW5kTmVlZE1hdGVyaWFsKGRhdGEpCgkJCS8vIGNvbnNvbGUubG9nKCLojrflj5bnrb7mlLblr4Tlh73nhafniYfpnIDopoHkuIrkvKDmnZDmlpnnsbvlnosiLCByZXMpOwoJCQlpZiAocmVzLnN1Y2Nlc3MgJiYgcmVzLmRhdGEpIHsKCQkJCXRoaXMubmVlZE1hdGVyaWFsVGlwcyA9IHJlcy5kYXRhCgkJCX0KCQl9LAoKCQkvLyDkuIrkvKDlm77niYcKCQlhc3luYyB1cGxvYWRGaWxlKGZpbGUpIHsKCQkJY29uc29sZS5sb2coIuS4iuS8oOWbvueJhy0tLS0tLS0tIiwgZmlsZSk7CgoJCQljb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpCgkJCWZvcm1EYXRhLmFwcGVuZCgnb3JkZXJJZCcsIHRoaXMuZXZpZE1haWxJZCkKCQkJZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZS5maWxlKQoJCQkvLyBjb25zdCBVUkwgPSB3aW5kb3cuVVJMIHx8IHdpbmRvdy53ZWJraXRVUkwKCQkJLy8gY29uc3QgaW1nVVJMID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlLmZpbGUpCgkJCS8vIGNvbnNvbGUubG9nKGltZ1VSTCk7CgoJCQlsZXQgcmVzID0gYXdhaXQgc2lnblNlbmRGaWxlVXBsb2FkKGZvcm1EYXRhKQoKCQkJY29uc29sZS5sb2coIuS4iuS8oOWbvueJh+e7k+aenCIsIHJlcyk7CgkJCWlmIChyZXMuc3VjY2VzcykgewoJCQkJY29uc29sZS5sb2coZmlsZS5maWxlKTsKCgkJCQl0aGlzLmZpbGVMaXN0LmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7CgkJCQkJaWYgKGZpbGUuZmlsZS51aWQgPT0gaXRlbS51aWQpIHsKCQkJCQkJT2JqZWN0LmFzc2lnbihpdGVtLCB7CgkJCQkJCQltYXRlcmlhbENvZGU6IHRoaXMubWF0ZXJpYWxDb2RlLAoJCQkJCQkJbWF0ZXJpYWxOYW1lOiByZXMuZGF0YS5vcmlnaW5hbEZpbGVuYW1lLAoJCQkJCQkJdGVtcElkOiByZXMuZGF0YS50ZW1wSWQsCgkJCQkJCQltYXRlcmlhbEJ1Y2tldDogSlNPTi5zdHJpbmdpZnkoewoJCQkJCQkJCWJ1Y2tldE5hbWU6IHJlcy5kYXRhLmJ1Y2tldE5hbWUsCgkJCQkJCQkJb2JqZWN0TmFtZTogcmVzLmRhdGEub2JqZWN0TmFtZQoJCQkJCQkJfSksCgkJCQkJCQltYWlsRXZpZFBlcnNvbklkOiB0aGlzLnBlcnNvbkRhdGFbMF0uaWQsCgkJCQkJCQl0eXBlOiByZXMuZGF0YS5vcmlnaW5hbEZpbGVuYW1lLnN1YnN0cihyZXMuZGF0YS5vcmlnaW5hbEZpbGVuYW1lLmxhc3RJbmRleE9mKCcuJykgKyAxKS50b0xvY2FsZUxvd2VyQ2FzZSgpLAoJCQkJCQkJYnVja2V0TmFtZTogcmVzLmRhdGEuYnVja2V0TmFtZSwKCQkJCQkJCW9iamVjdE5hbWU6IHJlcy5kYXRhLm9iamVjdE5hbWUsCgkJCQkJCQlwZXJzb25JZDogdGhpcy5tYXRlcmlhbENvZGUgPT0gMjA3MSA/IGZpbGUuZGF0YS5pZCA6ICIiCgkJCQkJCX0pCgkJCQkJfQoJCQkJfSkKCQkJfQoJCX0sCgoJCWhhbmRsZVByZXZpZXcoZmlsZSkgewoJCQljb25zb2xlLmxvZyhmaWxlKTsKCQkJY29uc3QgaW1nbGlzdCA9IFsncG5nJywgJ2pwZycsICdqcGVnJywgJ2JtcCcsICdnaWYnXQoJCQljb25zdCBmaWxlVHlwZSA9IGZpbGUubmFtZS5zdWJzdHIoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykgKyAxKS50b0xvY2FsZUxvd2VyQ2FzZSgpCgkJCWlmIChpbWdsaXN0LmluY2x1ZGVzKGZpbGVUeXBlKSkgewoJCQkJdGhpcy4kc3RvcmUuY29tbWl0KCdhcHAvQ0hBTkdFX0lNQUdFJywgW2ZpbGUudXJsXSkKCQkJCXJldHVybgoJCQl9CgoJCQl0aGlzLiRtZXNzYWdlLmVycm9yKCLlvZPliY3mlofku7bmmoLkuI3mlK/mjIHpooTop4giKQoJCQkvLyB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gOwoJCQkvLyB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwoJCX0sCgoJCWhhbmRsZUNvZGVQcmV2aWV3KCkgewoJCQkvLyB0aGlzLmNvZGVEaWFsb2dWaXNpYmxlID0gdHJ1ZQoJCX0sCgoJCS8vIOWIoOmZpOWbvueJhwoJCWFzeW5jIGhhbmRsZURlbGV0ZShmaWxlKSB7CgkJCWNvbnNvbGUubG9nKGZpbGUpOwoKCQkJY29uc3QgZGF0YSA9IHsKCQkJCWJ1Y2tldE5hbWU6IGZpbGUuYnVja2V0TmFtZSwKCQkJCW9iamVjdE5hbWU6IGZpbGUub2JqZWN0TmFtZSwKCQkJfQoJCQkvLyBsZXQgcmVzID0gYXdhaXQgZGVsSDVGaWxlKGRhdGEpCgkJCWxldCByZXMgPSBhd2FpdCB0aGlzLiRheGlvcyhgJHtwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfV0VCU09DS0VUX1BBVEh9L2RlbC1oNS1maWxlLyR7dGhpcy5ldmlkTWFpbElkfWAsIGRhdGEsIHsgbWV0aG9kOiAnZGVsZXRlJyB9KQoKCQkJY29uc29sZS5sb2coIuWIoOmZpOWbvueJhy0tLS0tLS0iLCByZXMpOwoJCQlpZiAocmVzLnN1Y2Nlc3MpIHsKCQkJCXRoaXMuZmlsZUxpc3QuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKCQkJCQlpZiAoaXRlbS51aWQgPT0gZmlsZS51aWQpIHsKCQkJCQkJdGhpcy5maWxlTGlzdC5zcGxpY2UoaW5kZXgsIDEpCgkJCQkJfQoJCQkJfSkKCQkJCXJldHVybgoJCQl9CgoJCQl0aGlzLiRtZXNzYWdlLmVycm9yKCLliKDpmaTlm77niYflpLHotKXvvIzor7fnqI3lkI7lho3or5UiKQoJCX0sCgoJCS8vIOS4iuS8oOWJjeWkhOeQhgoJCWJlZm9yZVVwbG9hZChmaWxlKSB7CgkJCS8vIGNvbnNvbGUubG9nKCLkuIrkvKDliY3lpITnkIYiLCBmaWxlKTsKCgkJCWNvbnN0IGFjY2VwdFR5cGUgPSBbImpwZyIsICJqcGVnIl0KCQkJY29uc3QgaW5kZXggPSBmaWxlLm5hbWUubGFzdEluZGV4T2YoIi4iKSArIDEKCQkJY29uc3QgZmlsZVR5cGUgPSBmaWxlLm5hbWUuc3Vic3RyKGluZGV4LCBmaWxlLm5hbWUubGVuZ3RoKS50b0xvY2FsZUxvd2VyQ2FzZSgpCgkJCWlmICghYWNjZXB0VHlwZS5pbmNsdWRlcyhmaWxlVHlwZSkpIHsKCQkJCXRoaXMuJG1lc3NhZ2Uud2FybmluZygn5LiN5pSv5oyB55qE5paH5Lu25qC85byP77yM6K+36YCJ5oupIEpQRy9KUEVHIOagvOW8j+eahOaWh+S7ticpOwoJCQkJcmV0dXJuIGZhbHNlCgkJCX0KCQkJcmV0dXJuIHRydWUKCgkJCS8vIGNvbnN0IGlzSlBHID0gZmlsZS50eXBlID09PSAnaW1hZ2UvanBlZyc7CgkJCS8vIGNvbnN0IGlzTHQyTSA9IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgMjsKCQkJLy8gaWYgKCFpc0pQRykgewoJCQkvLyAJdGhpcy4kbWVzc2FnZS5lcnJvcign5LiN5pSv5oyB55qE5paH5Lu25qC85byP77yM6K+36YCJ5oupIEpQRy9KUEVHIOagvOW8j+eahOaWh+S7ticpOwoJCQkvLyB9CgkJCS8vIGlmICghaXNMdDJNKSB7CgkJCS8vIAl0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDlm77niYflpKflsI/kuI3og73otoXov4cgMk1CIScpOwoJCQkvLyB9CgkJCS8vIHJldHVybiBpc0pQRwoJCX0sCgoJCS8vIOi2heWHuumAieaLqQoJCWhhbmRsZUV4Y2VlZChmaWxlcywgZmlsZUxpc3QpIHsKCQkJY29uc29sZS5sb2coZmlsZXMsIGZpbGVMaXN0KTsKCQkJdGhpcy4kbWVzc2FnZS53YXJuaW5nKGDmnIDlpJrkuIrkvKA1MOS4quaWh+S7tu+8jOW3suS4iuS8oOS6hiAke2ZpbGVMaXN0Lmxlbmd0aH0g5Liq5paH5Lu2YCk7CgkJfSwKCgkJLy8g6YCJ5oup6Kem5Y+RCgkJaGFuZGxlQ2hhbmdlKGZpbGVzLCBmaWxlTGlzdCkgewoJCQkvLyBjb25zb2xlLmxvZyhmaWxlcywgZmlsZUxpc3QpOwoJCQl0aGlzLmZpbGVMaXN0ID0gZmlsZUxpc3QKCQl9LAoKCQkvLyDliKDpmaTlm77niYcKCQloYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHsKCQkJLy8gY29uc29sZS5sb2coZmlsZSwgZmlsZUxpc3QpOwoJCQl0aGlzLmZpbGVMaXN0ID0gZmlsZUxpc3QKCQl9LAoKCQkvLyDpooTop4jlm77niYcKCQloYW5kbGVQaWN0dXJlQ2FyZFByZXZpZXcoZmlsZSkgewoJCQl0aGlzLiRzdG9yZS5jb21taXQoJ2FwcC9DSEFOR0VfSU1BR0UnLCBbZmlsZS51cmxdKQoJCQkvLyB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gZmlsZS51cmw7CgkJCS8vIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CgkJfSwKCgkJLy8g5o+Q5Lqk6K+B5o2uCgkJYXN5bmMgaGFuZGxlU3VibWl0KCkgewoJCQlpZiAoIXRoaXMuZ2V0SXNVcGxvYWRlZCgpKSByZXR1cm4KCgkJCWxldCBkYXRhID0gewoJCQkJZXZpZE1haWxJZDogdGhpcy5ldmlkTWFpbElkLAoJCQkJbWFpbEV2aWRNYXRlcmlhbERUT1M6IHRoaXMuZmlsZUxpc3QKCQkJfQoKCQkJbGV0IHJlcyA9IGF3YWl0IHNhdmVNYWlsUGljdHVyZShkYXRhKQoJCQljb25zb2xlLmxvZygi5o+Q5Lqk6K+B5o2uIiwgcmVzKTsKCQkJaWYgKHJlcy5zdWNjZXNzKSB7CgkJCQl0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuaPkOS6pOivgeaNruaIkOWKnyIpCgkJCQlpZiAodGhpcy5tYXRlcmlhbENvZGUgPT0gMjA2MSkgewoJCQkJCXRoaXMudXBkYXRlU3RhdHVzKDQpCgkJCQkJcmV0dXJuCgkJCQl9CgoJCQkJdGhpcy51cGRhdGVTdGF0dXMoNzAxKQoJCQkJcmV0dXJuCgkJCX0KCgkJCXRoaXMuJG1lc3NhZ2UuZXJyb3IoIuaPkOS6pOivgeaNruWksei0pe+8jOivt+eojeWQjuWGjeivlSIpCgkJfSwKCgkJLy8g5Yik5pat5piv5ZCm5LiK5LygCgkJZ2V0SXNVcGxvYWRlZCgpIHsKCQkJaWYgKHRoaXMubWF0ZXJpYWxDb2RlID09IDIwNjEgJiYgdGhpcy5maWxlTGlzdC5sZW5ndGggPiAwKSB7CgkJCQlyZXR1cm4gdHJ1ZQoJCQl9CgkJCWxldCBmbGFnID0gdGhpcy5wZXJzb25EYXRhLmV2ZXJ5KHJlY2VpdmVyID0+IHsKCQkJCXJldHVybiB0aGlzLmZpbGVMaXN0LmZpbmQoaXRlbSA9PiB7CgkJCQkJcmV0dXJuIHJlY2VpdmVyLmlkID09IGl0ZW0ucGVyc29uSWQKCQkJCX0pCgkJCX0pCgoJCQlpZiAoIWZsYWcpIHsKCQkJCWxldCBtc2cgPSB0aGlzLm1hdGVyaWFsQ29kZSA9PSAiMjA2MSIgPyAi6K+35YWI5LiK5Lyg562+5pS25Zu+54mHIiA6ICLmr4/kuKrmlLbku7bkurroh7PlsJHpnIDopoHkuIrkvKDkuIDku73mlofku7YiCgkJCQl0aGlzLiRtZXNzYWdlLmVycm9yKG1zZykKCQkJCXJldHVybiBmYWxzZQoJCQl9CgoJCQlyZXR1cm4gdHJ1ZQoJCX0sCgoJCS8vIOabtOaWsOeKtuaAgQoJCWFzeW5jIHVwZGF0ZVN0YXR1cyh2YWwpIHsKCQkJbGV0IGRhdGEgPSB7CgkJCQlpZDogdGhpcy5ldmlkTWFpbElkLAoJCQkJZXZpZFN0YXR1czogdmFsCgkJCX0KCQkJbGV0IHJlcyA9IGF3YWl0IHVwZGF0ZUV2aWRNYWlsKGRhdGEpCgkJCWlmIChyZXMuc3VjY2VzcykgewoJCQkJdGhpcy4kcm91dGVyLmdvKC0xKQoJCQl9CgkJfSwKCgkJLy8g6L+U5ZueCgkJaGFuZGxlQmFjaygpIHsKCQkJdGhpcy4kcm91dGVyLmdvKC0xKQoJCX0sCgoJCS8vIOaWh+S7tua1geiOt+WPluWbvueJhwoJCWdldEltYWdlVXJsKHR1KSB7CgkJCXZhciBkYXRhSW5mbyA9IHR1CgkJCXZhciB0aGF0ID0gdGhpcwoJCQkvLyB2YXIgY3I9YnRvYShuZXcgVWludDhBcnJheSh0dSkucmVkdWNlKChkYXRhLHR5cGUpPT5kYXRhK1N0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZSksJycpKQoJCQljb25zdCByZWFkZXIgPSBuZXcgd2luZG93LkZpbGVSZWFkZXIoKQoJCQkvLyDkvb/nlKhyZWFkQXNBcnJheUJ1ZmZlcuivu+WPluaWh+S7tiwgcmVzdWx05bGe5oCn5Lit5bCG5YyF5ZCr5LiA5LiqIEFycmF5QnVmZmVyIOWvueixoeS7peihqOekuuaJgOivu+WPluaWh+S7tueahOaVsOaNrgoJCQlyZWFkZXIucmVhZEFzRGF0YVVSTChkYXRhSW5mbykKCQkJcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CgkJCQljb25zdCBiYXNlNjREYXRhID0gZS50YXJnZXQucmVzdWx0CgkJCQkvLyDosIPnlKhkYXRhVVJJdG9CbG9i6L2s5o2i5pa55rOVCgkJCQl0aGF0LmltZ1VybCA9IHRoYXQuZGF0YVVSSXRvQmxvYihiYXNlNjREYXRhKQoJCQkJLy8gdGhhdC5zcmNMaXN0LnB1c2godGhhdC5pbWdVcmwpCgkJCQkvLyBjb25zb2xlLmxvZyh0aGF0LmRhdGFVUkl0b0Jsb2IoYmFzZTY0RGF0YSksICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpOwoJCQl9CgkJfSwKCgkJZGF0YVVSSXRvQmxvYihiYXNlNjREYXRhKSB7CgkJCS8vIGNvbnNvbGUubG9nKGJhc2U2NERhdGEsIGJhc2U2NERhdGEubGVuZ3RoKQoJCQlsZXQgYnl0ZVN0cmluZyA9IGJhc2U2NERhdGEKCQkJaWYgKGJhc2U2NERhdGEuc3BsaXQoJywnKVswXS5pbmRleE9mKCdiYXNlNjQnKSA+PSAwKSB7CgkJCQlieXRlU3RyaW5nID0gYXRvYihiYXNlNjREYXRhLnNwbGl0KCcsJylbMV0pIC8vIGJhc2U2NCDop6PnoIEKCQkJfSBlbHNlIHsKCQkJCWJ5dGVTdHJpbmcgPSB1bmVzY2FwZShiYXNlNjREYXRhLnNwbGl0KCcsJylbMV0pCgkJCX0KCQkJLy8g6I635Y+W5paH5Lu257G75Z6LCgkJCWNvbnN0IG1pbWVTdHJpbmcgPSBiYXNlNjREYXRhLnNwbGl0KCcsJylbMF0ubWF0Y2goLzooLio/KTsvKVsxXSAvLyBtaW1l57G75Z6LCgoJCQkvLyBBcnJheUJ1ZmZlciDlr7nosaHnlKjmnaXooajnpLrpgJrnlKjnmoTjgIHlm7rlrprplb/luqbnmoTljp/lp4vkuozov5vliLbmlbDmja7nvJPlhrLljLoKCQkJLy8gbGV0IGFycmF5QnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGJ5dGVTdHJpbmcubGVuZ3RoKSAvLyDliJvlu7rnvJPlhrLmlbDnu4QKCQkJLy8gbGV0IHVpbnRBcnIgPSBuZXcgVWludDhBcnJheShhcnJheUJ1ZmZlcikgLy8g5Yib5bu66KeG5Zu+CgoJCQljb25zdCB1aW50QXJyID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZVN0cmluZy5sZW5ndGgpIC8vIOWIm+W7uuinhuWbvgoKCQkJZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlU3RyaW5nLmxlbmd0aDsgaSsrKSB7CgkJCQl1aW50QXJyW2ldID0gYnl0ZVN0cmluZy5jaGFyQ29kZUF0KGkpCgkJCX0KCQkJLy8g55Sf5oiQYmxvYuWbvueJhwoJCQljb25zdCBibG9iID0gbmV3IEJsb2IoW3VpbnRBcnJdLCB7CgkJCQl0eXBlOiBtaW1lU3RyaW5nCgkJCX0pCgkJCS8vIGNvbnNvbGUubG9nKCBibG9iKTsKCQkJLy8g5L2/55SoIEJsb2Ig5Yib5bu65LiA5Liq5oyH5ZCR57G75Z6L5YyW5pWw57uE55qEVVJMLCBVUkwuY3JlYXRlT2JqZWN0VVJM5pivbmV3IEJsb2Lmlofku7bnmoTmlrnms5Us5Y+v5Lul55Sf5oiQ5LiA5Liq5pmu6YCa55qEdXJsLOWPr+S7peebtOaOpeS9v+eUqCzmr5TlpoLnlKjlnKhpbWcuc3Jj5LiKCgkJCXJldHVybiBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpCgkJfSwKCX0sCgljb21wdXRlZDogewoJCXVwbG9hZEltYWdlQ29tcHV0ZWQ6IGZ1bmN0aW9uICgpIHsKCQkJcmV0dXJuIChpZCkgPT4gewoJCQkJcmV0dXJuIHRoaXMuZmlsZUxpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS5wZXJzb25JZCA9PSBpZCkKCQkJfQoJCX0sCgkJZmlsZUxpc3RDb21wdXRlZCgpIHsKCQkJcmV0dXJuIHRoaXMuZmlsZUxpc3QKCQl9Cgl9LAp9Cg=="},null]}