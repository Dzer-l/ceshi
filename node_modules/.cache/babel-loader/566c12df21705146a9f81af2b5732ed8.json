{"remainingRequest":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/thread-loader/dist/cjs.js!/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/jenkins_data/workspace/页面-公证处后台/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jenkins_data/workspace/页面-公证处后台/src/views/logisticsManage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jenkins_data/workspace/页面-公证处后台/src/views/logisticsManage/index.vue","mtime":1634724784709},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jenkins_data/workspace/页面-公证处后台/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}